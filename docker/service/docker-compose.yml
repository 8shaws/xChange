version: "3.8"

services:
  postgres:
    image: postgres:15.0-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: main
    networks:
      - app-network
    container_name: postgres
    volumes:
      - data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready --username=user --dbname=main --quiet
      interval: 15s
      timeout: 5s

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - app-network
    restart: always
    ports:
      - 6379:6379

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    networks:
      - app-network
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    volumes:
      - kafka_data:/opt/kafka/data

networks:
  app-network:
    driver: bridge

volumes:
  data:
  kafka_data:
